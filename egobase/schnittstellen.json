[
  {
    "title": "Dateien hochladen",
    "url": "https://hilfe.egocms.com/entwicklung/schnittstellen/ajax-schnittstelle-(frontend)/dateien-hochladen",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nAjax Schnittstelle (Adminbereich)\nlibrary_books\nAjax Schnittstelle (Frontend)\nlibrary_books\nDateien hochladen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nDateien hochladen\n\nFolgend ein Beispiel um mit der json.php Schnittstelle Dateien hochzuladen. Da JSON erwartet und zurückgegeben wird, wird die hochzuladende Datei im Client gelesen und base64 kodiert an den Server gesendet.\n\nHTML\n<form enctype=\"multipart/form-data\" onsubmit=\"upload(this); return false;\"> <input type=\"file\" name=\"file\"> <input type=\"submit\" name=\"Upload\"> </form>\nJavascript\nfunction upload(form) { if (JSON && form.elements.file.files.length) { var file = form.elements.file.files[0]; var xmlhttp = null; if (window.XMLHttpRequest) { xmlhttp = new XMLHttpRequest(); } else if (window.ActiveXObject) { xmlhttp = new ActiveXObject('Microsoft.XMLHTTP'); } if (xmlhttp) { xmlhttp.open('POST', '/json.php', true); xmlhttp.setRequestHeader('Content-Type', 'application/json;charset=UTF-8'); xmlhttp.onreadystatechange = function () { if (xmlhttp.readyState == 4 && xmlhttp.status == 200) { var ret = JSON.parse(xmlhttp.responseText); } }; var reader = new FileReader(); reader.onload = function(e) { xmlhttp.send(JSON.stringify({ site : 'demo', lang : 'de', id : 2, params : { name : file.name, data : e.target.result }, method : 'upload' })); }; reader.readAsDataURL(file); } } }\nPHP\nclass JSON_Request extends Ego_Request { public function upload($name, $data) { // Binär String aus base64 kodiertem String erhalten $data = base64_decode(explode(',', $data, 2)[1]); // Binär String in temporäre Datei speichern $source = tempnam($GLOBALS['egotec_conf']['tmp_dir'], 'upload'); Ego_System::file_put_contents($source, $data); // Temporäre Datei in den Mediapool speichern return $this->page->poolPut($source, $name); } }\nImpressum | Datenschutz"
  },
  {
    "title": "Ajax Schnittstelle (Frontend)",
    "url": "https://hilfe.egocms.com/entwicklung/schnittstellen/ajax-schnittstelle-(frontend)",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nAjax Schnittstelle (Adminbereich)\nlibrary_books\nAjax Schnittstelle (Frontend)\nlibrary_books\nDateien hochladen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nAjax Schnittstelle (Frontend)\n\nFür AJAX-Aufrufe im Frontend wurde die json.php eingeführt um einfache und einheitliche Requests zu ermöglichen.\n\nEin AJAX-Aufruf muss /json.php ansteuern. Hier werden Methoden einer json.php-Datei aufgerufen die in site/ liegt. Welche json.php das ist, wird über die Parameter festgelegt:\n\nsite = der Mandant\nlang = die Sprache\nid = die ID Seite\n\nWenn \"site\", \"lang\" und \"id\" nicht gesetzt sind, wird der Standardmandant und dessen Startseite verwendet!\n\nDie json.php Datei wird gesucht in:\n\nsite/<Mandant>/<Seitentyp>/\nsite/_global/<Seitentyp>/\nsite/<Mandant>/\nsite/_global/\n\nIn der angesteuerten json.php wird eine Klasse definiert:\n\nclass JSON_Request extends Ego_Request { }\n\nIn dieser Klasse werden Methoden definiert, die mit dem Parameter method aufgerufen werden. Eventuelle Parameter, die dieser Methode übergeben werden sollen, werden mit einem Objekt params übergeben.\n\nIn dieser Klasse kann jederzeit mit $this->site und $this->page auf das aktuelle Site und Page-Objekt zugegriffen werden (oder auch $this->auth und $this->smarty). Beispiel:\n\nclass JSON_Request extends Ego_Request { public function json_test($a, $b) { return $this->page->field['name'].', '.$a.', '.$b; } }\n\nWird keine Klasse definiert, können auch alternativ Funktionen definiert werden. Die Site und Page-Objekte sind dann mit $GLOBALS['site'] und $GLOBALS['page'] erreichbar (oder auch $GLOBALS['auth'] und $GLOBALS['smarty']). Beispiel:\n\nfunction json_test($a, $b) { return $GLOBALS['page']->field['name'].', '.$a.', '.$b; }\n\nDer Rückgabewert ist ein Objekt mit result und error. Die Methode selbst liefert nur den Rückgabewert für result. Eigene Fehlermeldungen können mit $GLOBALS['return']['error'] geschrieben werden (für die JSON_Request Klasse sind die Methoden getError() und setError($error) verfügbar).\n\nEin Javascript AJAX-Aufruf mit JSON sieht z.B. so aus:\n\nif (JSON) { var xmlhttp = null; if (window.XMLHttpRequest) { xmlhttp = new XMLHttpRequest(); } else if (window.ActiveXObject) { xmlhttp = new ActiveXObject('Microsoft.XMLHTTP'); } if (xmlhttp) { xmlhttp.open('POST', '{/literal}{$egotec_conf.url_dir}json.php{literal}', true); xmlhttp.setRequestHeader('Content-Type', 'application/json;charset=UTF-8'); xmlhttp.onreadystatechange = function() { if (xmlhttp.readyState == 4 && xmlhttp.status == 200) { var ret = JSON.parse(xmlhttp.responseText); } }; xmlhttp.send(JSON.stringify({ site : '{/literal}{$site->name}{literal}', lang : '{/literal}{$site->language}{literal}', id : {/literal}{$page->field.id}{literal}, params : {a : 1, b : 2}, method : 'json_test' })); } }\nwb_incandescent\n\nSo ein Aufruf lässt sich natürlich auch mit z.B. dojo oder jQuery realisieren. Wichtig ist, dass der Request als JSON gesendet und der Response als JSON empfangen wird.\n\nwarning\n\nBitte beachten Sie, dass nur POST Requests erlaubt sind. Alle anderen Methoden werden mit einem 403 Header beantwortet.\n\nMagic Methoden\n\nSie können auch Magic Methoden nutzen. Diese Methoden werden nicht direkt in der Klasse JSON_Request definiert, sondern erst bei Bedarf eingebunden. Über Magic Methoden können Sie mehrere JSON Methoden eines Seitentyps umsetzen, welcher z.B. im Standard und in einem kundenspezifischen Design existiert und jeweils eigene Definitionen liefern muss.\n\nDazu legen Sie eine json.METHODE.php Datei an, in welcher die Methode definiert ist. Beispiel json.magic_test.php:\n\nfunction magic_test($site, $page, $auth, $smarty, $params) { }\n\nDie Magic Methode erwartet folgende Parameter:\n\n$site: Das Site Objekt.\n$page: Das Page Objekt.\n$auth: Das Auth Objekt.\n$smarty: Das Smarty Objekt.\n$params: Die Parameter, die der Methode übergeben wurden.\nImpressum | Datenschutz"
  },
  {
    "title": "Ajax Schnittstelle (Adminbereich)",
    "url": "https://hilfe.egocms.com/entwicklung/schnittstellen/ajax-schnittstelle-(adminbereich)",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nAjax Schnittstelle (Adminbereich)\nlibrary_books\nAjax Schnittstelle (Frontend)\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nAjax Schnittstelle (Adminbereich)\n\nFür den Adminbereich wird die Verwendung einer anderen Schnittstelle empfohlen, als die die für das Frontend empfohlen wird (siehe hier). Als Übertragungsformatierung wird ebenfalls JSON verwendet.\n\nIm Adminbereich gibt es im main_window-Objekt die Funktion request(), welche folgende Parameter kennt:\n\nfile: Pfad zur PHP Datei, die Funktionen enthält (der Pfad zur Datei ist ausgehend vom CMS Installationsverzeichnis).\nfunc: Die aufzurufende Funktion.\nparams: Die Parameter für diese Funktion (als Array oder Objekt).\nonComplete: Die Callback-Funktion für die Antwort (Parameter response, params).\nonError (optional): Die Callback Funktion im Fehlerfall (Parameter response, params).\nhandleAs (optional): Das zu verarbeitende Format (Standard json).\ntimeout (optional): Das verwendete Timeout (Standard 60000, übergeben Sie undefined um den Standardwert zu verwenden).\nsync (optional): Den Aufruf synchron ausführen (Standard false).\n\nBeispiel JavaScript:\n\nmain_window.request('pub/theme/<DESIGN>/site/admin/functions.php', 'foobar', { a : 1, b : 2 }, function(response, params) { console.log(response, params); });\n\n Beispiel PHP:\n\nfunction foobar($params) { return $params['a'] + $params['b']; }\nwb_incandescent\n\nFalls Sie die aktuelle Seite im Adminbereich dem Ajax Call übergeben möchten, müssen Sie Informationen zum aktuellen Mandanten, Sprache und ID oder Identität als Parameter dem request() Aufruf übergeben und aus diesen Informationen das Page Objekt erzeugen. Die folgenden Beispiele verwenden vorhandene Variablen im Frame dlg.\n\n1. Beispiel mit Mandant, Sprache und ID:\n\nmain_window.request('pub/theme/<DESIGN>/site/admin/functions.php', 'foobar', { site : parent.site, lang : parent.lang, id : parent.id }, function(response, params) { console.log(response, params); });\n\nEntsprechend in PHP:\n\nfunction foobar($params) { $site = new Site($params['site'], $params['lang']); $page = $site->getPage($params['id']); return $page->field['name']; }\n\n2. Beispiel mit Identität:\n\nmain_window.request('pub/theme/<DESIGN>/site/admin/functions.php', 'foobar', { identity : parent.identity }, function(response, params) { console.log(response, params); });\n\nEntsprechend in PHP:\n\nfunction foobar($params) { $page = Page::byIdentity($params['identity']); return $page->field['name']; }\nImpressum | Datenschutz"
  },
  {
    "title": "Schnittstellen",
    "url": "https://hilfe.egocms.com/entwicklung/schnittstellen",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nAjax Schnittstelle (Adminbereich)\nlibrary_books\nAjax Schnittstelle (Frontend)\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nSchnittstellen\n\nDurch Verwendung der Skriptsprache PHP ist EGOCMS sehr flexibel. Es existieren Schnittstellen zu vielen Skriptsprachen, Datenbanken und allen Internet Standards.\n\nEGOCMS ist Komponenten basiert aufgebaut und lässt sich beliebig erweitern.\n\nEs können Schnittstellen zu beliebigen Systemen erstellt werden. Die einfachste Version einer Schnittstelle wird mit Hilfe eines FTP-Uploads und einer Textdatei realisiert, die dann von einer eigens dafür erstellten Komponente verarbeitet wird.\n\nDurch die Verwendung von PHP sind aber auch höhere Schnittstellen z.B. zu Datenbanken (MariaDB, MySQL, MS SQL, Oracle, DB2, Sybase, PostgreSQL, dBase, Informix, InterBase, Ingres II, mSQL, ODBC, SESAM, ...) und anderen Systemen möglich (Cybercash, XML, XSLT, FTP, PDF, Verisign, Hyperwave, ICAP, IMAP, POP3, NNTP, SMTP, LDAP, Flash, Shockwave, mnoGoSearch, SSL, Corba, YAZ, YP/NIS, ...).\n\nAuch können SOAP und XML-RPC Schnittstellen angesprochen werden. Weiterhin ist eine Schnittstelle zu Java/JavaBeans/JavaServlets möglich. Auf Windows Systemen kann zusätzlich noch COM/DCOM/ActiveX als Schnittstelle fungieren. Über einen eigens entwickelten COM/DLL Wrapper können auch beliebige DLLs eingebunden werden.\n\nDie Einbindung können Sie selbst übernehmen. Die Schnittstellenprogrammierung ist dokumentiert und das komplette EGOCMS liegt Ihnen bei Lizenzerwerb im Quellcode vor.\n\nWir übernehmen gerne die Erstellung Ihrer Schnittstellen an Hand eines Pflichtenhefts. Es wurde unter anderem eine Schnittstelle zu einer Hotelverwaltungssoftware realisiert, so dass online Buchungen vorgenommen werden. Ein weiteres Beispiel ist ein Auftrags-Tracking System mit dem der Kunde Passwort geschützt den aktuellen Stand seiner Aufträge verfolgen kann.\n\nDie Grundstruktur\nImpressum | Datenschutz"
  }
]