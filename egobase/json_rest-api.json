[
  {
    "title": "Beispiele",
    "url": "https://hilfe.egocms.com/entwicklung/json_rest-api/beispiele",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nErste Schritte\nlibrary_books\nClient einrichten\nlibrary_books\nVerfügbare Methoden\nlibrary_books\nBeispiele\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nBeispiele\n\nFolgend werden Ihnen einige Beispiele der JSON/REST API präsentiert, um den Aufbau von einfachen und komplexen Methoden verständlich zu machen.\n\nDie Cache eines Mandanten löschen\nPOST /rest/demo/de/clearCache\nwb_incandescent\n\nLöscht implizit die Cache aller Sprachen dieses Mandanten.\n\nEine aktive Seite ermitteln\nGET /rest/city/de/getPage?id=10\nGET /rest/city/de/10\nEine inaktive Seite ermitteln\nGET /rest/city/de/getPage?id=20¶m[inactive]=1\nGET /rest/city/de/20?param[inactive]=1\nEine neue Seite anlegen\nPOST /rest/city/de/20\n<span>Daten:</span> {    {\"name\" : \"Neue Seite\"},    {\"foo\" : \"bar\"} }</span>\nEinen Benutzer anlegen\nPOST /rest/~user/\n<span>Daten:</span> {    {\"username\" : \"foobar\"} }</span>\nEinen Benutzer löschen\nPUT /rest/~user/USER_ID/delete\nImpressum | Datenschutz"
  },
  {
    "title": "Verfügbare Methoden",
    "url": "https://hilfe.egocms.com/entwicklung/json_rest-api/verfuegbare-methoden",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nErste Schritte\nlibrary_books\nClient einrichten\nlibrary_books\nVerfügbare Methoden\nlibrary_books\nBeispiele\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nVerfügbare Methoden\n\nIhnen stehen für die nützlichsten EGOCMS Objekte unterschiedliche Methoden zur Verfügung, die Sie über die JSON/REST API ansprechen können. Hier finden Sie eine schematische Darstellung dieser Methoden. Angaben zu erwarteten/möglichen Parametern und Rückgabewerten der Methoden entnehmen Sie bitte der detaillierten Dokumentation für Entwickler oder dieser Hilfe.\n\nZu lesen sind die Definitionen wie folgt:\n\n<Methode des angesteuerten Objekts> = \"<Header, über die diese Methode nur aufgerufen werden darf>:<Abgefragte Berechtigung, kommasepariert>\"\nwb_incandescent\n\nDa Sie sich über die JSON/REST API und dem API Token mit einem EGOCMS Benutzer anmelden, werden alle Methoden über diesen und seinen Berechtigungen ausgeführt.\n\nSite\nclearCache = \"POST\"\nclearTrashcan = \"POST\"\ngetBlocks = \"GET\"\ngetCacheEntry = \"GET\"\ngetCacheLastChanged = \"GET\"\ngetErrorPage = \"GET:view\"\ngetLanguages = \"GET\"\ngetMediaSite = \"GET\"\ngetMediaUrl = \"GET:view\"\ngetPage = \"GET:view\"\ngetPages = \"GET:view\"\ngetPageUrl = \"GET:view\"\ngetRoot = \"GET:view\"\ngetSkins = \"GET\"\ngetUrl = \"GET:view\"\nhasDeleted = \"GET\"\nhasLiveserver = \"GET\"\nhasMediaSite = \"GET\"\nhasPermission = \"GET\"\nhasRight = \"GET\"\nhasRightsOnId = \"GET\"\nisPermission = \"GET\"\nsetCacheEntry = \"POST\"\nsave = \"PUT\"\nsave_admin = \"PUT\"\nPage\naddChild = \"PUT:edit,child\"\naddKeyword = \"POST:edit\"\naddParent = \"PUT:edit\"\ncopyTo = \"POST:edit,child\"\ncreateLanguagePage = \"POST:edit\"\ndelete = \"DELETE:remove\"\ndelParent = \"PUT:edit\"\ndestroy = \"DELETE:remove\"\ngetAncestors = \"GET:view\"\ngetChildren = \"GET:view\"\ngetDescendants = \"GET:view\"\ngetIdentity = \"GET:view\"\ngetIconUrl = \"GET:view\"\ngetKeywords = \"GET:view\"\ngetLanguagePage = \"GET:view\"\ngetParents = \"GET:view\"\ngetPath = \"GET:view\"\ngetRights = \"GET:view\"\ngetRightsArray = \"GET:view\"\ngetSiblings = \"GET:view\"\ngetSite = \"GET\"\ngetUrl = \"GET:view\"\ngetUser = \"GET:view\"\ngetUsersArray = \"GET:view\"\nhasChildren = \"GET:view\"\nhasFile = \"GET:view\"\nhasMultiParents = \"GET:view\"\nhasRights = \"GET:view\"\nhasRightsOn = \"GET:view\"\nisClone = \"GET:view\"\nisLanguageLink = \"GET:view\"\nisLocked = \"GET:view\"\nisReleaseCopy = \"GET:view\"\nisRoot = \"GET:view\"\nisWorkflowCopy = \"GET:view\"\nlinkTo = \"POST:edit,child\"\nlock = \"PUT:edit\"\nmerge = \"PUT:edit\"\nmove = \"POST:edit,child\"\nnewChild = \"POST:child\"\nnewFile = \"POST:child\"\nnewRelease = \"POST:edit\"\npoolClear = \"PUT:edit\"\npoolCopy = \"POST:edit\"\npoolDelete = \"DELETE:edit\"\npoolEdit = \"PUT:edit\"\npoolExtract = \"PUT:edit\"\npoolGet = \"GET:view\"\npoolList = \"GET:view\"\npoolMove = \"POST:edit\"\npoolPut = \"POST:edit\"\npoolRestore = \"PUT:edit\"\nrelease = \"PUT:edit\"\nrestore = \"PUT:edit\"\nsetRightsArray = \"PUT:edit,view_rights\"\nsetUsersArray = \"PUT:edit,view_rights\"\nunlock = \"PUT:edit\"\nupdate = \"PUT:edit\"\nupdateChildren = \"PUT:edit\"\nupdateExtra = \"PUT:edit\"\nupdateField = \"PUT:edit\"\nupdateFile = \"PUT:edit\"\nupdateParents = \"PUT:edit\"\nupdateRights = \"PUT:edit\"\nundelete = \"PUT:remove\"\nunlinkFrom = \"POST:edit,child\"\nvalidateFile = \"POST:edit\"\nUser_SQL\naddFavorite = \"PUT\"\ndelete = \"DELETE\"\ndestroy = \"DELETE\"\ngetAllGroups = \"GET\"\ngetFullname = \"GET\"\ngetAllRoles = \"GET\"\ngetAllUsers = \"GET\"\ngetExtra = \"GET\"\ngetFavorites = \"GET\"\ngetGroupRoleRelations = \"GET\"\nhasGroupRoleRelation = \"GET\"\nisActive = \"GET\"\nisInactive = \"GET\"\nremoveFavorite = \"DELETE\"\nsendMail = \"POST\"\nsetExtra = \"PUT\"\nundelete = \"PUT\"\nupdate = \"POST,PUT\"\nGroup_SQL\naddChild = \"POST,PUT\"\ndelete = \"DELETE\"\ngetAllUsers = \"GET\"\ngetChildren = \"GET\"\ngetParent = \"GET\"\ngetPath = \"GET\"\nmove = \"PUT\"\nupdate = \"POST,PUT\"\nRole_SQL\naddChild = \"POST,PUT\"\ndelete = \"DELETE\"\ngetAllUsers = \"GET\"\ngetChildren = \"GET\"\ngetParent = \"GET\"\ngetPath = \"GET\"\nmove = \"PUT\"\nupdate = \"POST,PUT\"\nImpressum | Datenschutz"
  },
  {
    "title": "Erste Schritte",
    "url": "https://hilfe.egocms.com/entwicklung/json_rest-api/erste-schritte",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nErste Schritte\nlibrary_books\nClient einrichten\nlibrary_books\nVerfügbare Methoden\nlibrary_books\nBeispiele\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nErste Schritte\nAuthentifizierung\n\nNicht jeder darf auf die JSON/REST API zugreifen. Über POST müssen Sie sich zunächst authentifizieren. Dazu benötigen Sie eine Benutzer ID und einen API Token.\n\n/rest/startSession?user_id=USER_ID&token=TOKEN\n\nIn der Benutzerverwaltung können Sie für einen Benutzer einen API Token generieren lassen (Reiter Optionen).\n\nNur wenn der Benutzer einen API Token besitzt und dieser auch mit dem übergebenen Token übereinstimmt, darf die API genutzt werden.\n\nwarning\n\nSie erhalten bei erfolgreicher Authentifzierung eine Session ID zurück. Diese muss fortan für jeden weiteren Aufruf als EGOTEC Cookie weitergereicht werden.Alle weiteren Aufrufe verwenden die EGOCMS Rechteverwaltung. Wenn Sie zum Beispiel eine Seite aktualisieren wollen, dann funktioniert das nur, wenn der authentifizierte Benutzer auch die entsprechenden Rechte für diese Seite besitzt.\n\nWenn Sie Ihre API Sitzung beenden möchten, machen Sie folgenden Aufruf:\n\n/rest/closeSession\nGET\n\nMit <Mandant>/<Sprache> können Sie einen Mandanten in einer Sprache ermitteln. Beispiel:\n\n/rest/demo/de\n\nHier können Sie auch public Methoden des Site Objekts aufrufen. Beispiele:\n\n/rest/demo/de/getRoot\n/rest/demo/de/getLanguages\n\nWenn Sie den Methoden Parameter übergeben möchten, können Sie das über den Query String. Die Reihenfolge der Parameter bestimmt dabei die Reihenfolge mit der die Parameter der Methode übergeben werden.\n\n/rest/demo/de/getPage?id=10\n\nUm auf ein Page Objekt zuzugreifen können Sie stattdessen aber auch diesen Aufruf verwenden:\n\n/rest/demo/de/10\n\nAuch hier können Sie nun public Methoden des Page Objekts aufrufen: Beispiele:\n\n/rest/demo/de/10/getChildren\n/rest/demo/de/10/getDescendants\nPUT\n\nEin Beispiel für eine schreibende Methode wäre eine Seite zu ändern:\n\n/rest/demo/de/10/update?param[field][title]=New+title\nPOST\n\nEin Beispiel für eine erstellende Methode wäre eine Seite anzulegen:\n\n/rest/demo/de/10/newChild?param[field][name]=Created\nDELETE\n\nEin Beispiel für eine löschende Methode wäre eine Seite zu löschen:\n\n/rest/demo/de/10\n\nHier sieht man auch, dass der selbe Aufruf wie beim GET Beispiel wegen des anderen Headers auch eine andere Aktion ausführt.\n\nwb_incandescent\n\nNeben Site und Page Methoden können Sie auch auf Benutzer, Gruppen und Rollen Objekte zugreifen. Welche Methoden zur Verfügung stehen, entnehmen Sie bitte der rest.ini Datei oder hier.\n\nUm einen Benutzer anzusteuern, müssen Sie dessen ID angeben:\n\n/rest/~user/USER_ID\n\nDas selbe gilt auch für eine Gruppe oder Rolle:\n\n/rest/~group/GROUP_ID\n/rest/~role/ROLE_ID\nImpressum | Datenschutz"
  },
  {
    "title": "Client einrichten",
    "url": "https://hilfe.egocms.com/entwicklung/json_rest-api/client-einrichten",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nErste Schritte\nlibrary_books\nClient einrichten\nlibrary_books\nVerfügbare Methoden\nlibrary_books\nBeispiele\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nClient einrichten\n\nDie JSON/REST API erfordert Logik auf dem Server und dem Client. Den Server gibt das EGOCMS vor. Den Client aber müssen Sie selbst bereitstellen.\n\nSie können die API verwenden um über eine eigene, EGOCMS fremde Anwendung mit dem EGOCMS zu kommunizieren. Es ist aber auch möglich die API zu nutzen um von einer EGOCMS Installation mit einer anderen zu kommunizieren (z.B. zwischen Redaktions- und Liveserver).\n\nFür diesen Fall bietet das EGOCMS bereits eine in PHP geschriebene Logik für den Client (lib/base/Ego_REST_Client.php). Sie können dieses Skript auch als Vorlage für einen eigenen Client verwenden.\n\nDie Initialisierung des Clients ist denkbar einfach:\n\nrequire_once('base/Ego_REST_Client.php');\n$rest = new Ego_REST_Client('http://localhost/rest/');\n\nDer übergebene Parameter entspricht hierbei der URL zum Zielserver mit dem Pfad zur API (/rest/).\n\nDa für die API eine Authentifizierung notwendig ist, ist der erste Aufruf nach der Initialisierung:\n\n$rest->start('USER_ID', 'TOKEN');\n\nNun können Sie die Methoden get, put, post und delete verwenden. Dabei ist jeweils der erste Parameter der angesteuerte Pfad und der zweite Parameter zusätzliche Parameter, die der Methode übergeben werden. Beispiele:\n\nEinen Mandanten ermitteln:\n$rest->get('demo/de');\nEine Seite ermitteln:\n$rest->get('demo/de/10');\nEine Seite aktualisieren:\n$rest->put('demo/de/10', array(array('field' => array('title' => 'New title'))));\nEine Seite erstellen:\n$new_child = $rest->post('demo/de/10', array(array('name' => 'Created')));\nEine Seite löschen:\n$rest->delete('demo/de/12');\nwb_incandescent\nDie Ego_REST_Client Klasse kümmert sich implizit darum, dass die zu Beginn erhaltene Session ID bei jedem weiteren Aufruf als EGOTEC Cookie weitergereicht wird.\n\nWenn Sie mit Ihrer Kommunikation abgeschlossen haben, sollten Sie die aktive API Sitzung beenden:\n\n$rest->close();\nImpressum | Datenschutz"
  },
  {
    "title": "JSON/REST API",
    "url": "https://hilfe.egocms.com/entwicklung/json_rest-api",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nErste Schritte\nlibrary_books\nClient einrichten\nlibrary_books\nVerfügbare Methoden\nlibrary_books\nBeispiele\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nJSON/REST API\n\nDie JSON/REST API ermöglicht über GET, PUT, POST und DELETE Anfragen mit dem EGOCMS aus anderen Anwendungen heraus zu kommunizieren. Die Antworten erhalten Sie immer im JSON Format.\n\nDamit Sie diese API ansprechen können, müssen Sie auf dem Webserver, auf dem das EGOCMS installiert ist, folgende Regel eintragen.\n\nApache (z.B. .htaccess):\nRewriteCond %{REQUEST_URI} ^/rest/\nRewriteRule ^(.*)$ bin/json/rest.php?%{QUERY_STRING}\nNginx:\nlocation /rest/ {\n    include fastcgi_params;\n\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    fastcgi_param PHP_ADMIN_VALUE \"session.save_path=$document_root/var/session\";\n    fastcgi_read_timeout 600;\n\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n\n    try_files $uri $uri/ /bin/json/rest.php?$args;\n}\nwarning\n\nDie REST URL für einen Aufruf ist immer im Format [Protokoll]://[Domain]/rest/[Anweisungen]. Welche Anweisungen möglich sind, wird auf den folgenden Seiten erklärt.\n\nWelche Methoden über GET, PUT, POST und DELETE aufrufbar sind, ist festgelegt. Standardmäßig sind\n\nGET: nur lesende Methoden\nPUT: nur schreibende Methoden\nPOST: nur erstellende Methoden\nDELETE: nur löschende Methoden\n\nvorgegeben. Sie müssen darauf achten auch den entsprechenden Header zu einer Methode zu senden. Andernfalls erhalten Sie keinen Zugriff auf diese Methode (eine schreibende Methode kann demnach nicht mit einem lesenden Aufruf angesteuert werden, usw.).\n\nwb_incandescent\n\nWelche Vorgaben es gibt, können Sie in lib/base/rest.ini oder hier nachlesen. Bei Bedarf können Sie diese Vorgaben auch erweitern/überschreiben. Hierzu legen Sie eine eigene rest.ini in site/_global/ oder site/<Mandant>/ an. Ihre eigene Datei wird mit der Standard Datei zusammengeführt, so dass Sie lediglich Ihre Änderungen angeben müssen.\n\nIn den Blöcken site, page, user, group und role können sie zugehörige Methoden definieren. Diese erhalten als Wert den erwarteten Header. Mit einem Doppelpunkt getrennt können Sie bei page Methoden kommasepariert auch angeben, welche Rechte beim Aufruf geprüft werden sollen.\n\nImpressum | Datenschutz"
  }
]