[
  {
    "title": "Redaktion- und Liveserver",
    "url": "https://hilfe.egocms.com/entwicklung/entwicklungsumgebung/docker/docker-compose-umgebungen/redaktion--und-liveserver",
    "html": "Hilfeportal\nsearch\nKundenlogin\nlibrary_books\nVorwort\nlibrary_books\nInstallation\nlibrary_books\nAdministration\nlibrary_books\nRedaktion\nlibrary_books\nDesign\nlibrary_books\nEntwicklung\nlibrary_books\nEntwicklungsumgebung\nlibrary_books\nVersionsverwaltung\nlibrary_books\nDocker\nlibrary_books\nInstallation\nlibrary_books\nKommandozeile\nlibrary_books\nSMTP Mailserver\nlibrary_books\nDocker-Compose Umgebungen\nlibrary_books\nStandard\nlibrary_books\nRedaktion- und Liveserver\nlibrary_books\nWorkstation\nlibrary_books\nIDE\nlibrary_books\nBrowser\nlibrary_books\nNeues Projekt\nlibrary_books\nTests\nlibrary_books\nSchnittstellen\nlibrary_books\nDie Verzeichnisstruktur\nlibrary_books\nDas Basisskript\nlibrary_books\nNeue Seitentypen erstellen\nlibrary_books\nWeiterführende Möglichkeiten\nlibrary_books\nTipps und Tricks\nlibrary_books\nKlassen & Funktionen\nlibrary_books\nBeispiele & Vorlagen\nlibrary_books\nAPI\nlibrary_books\nNavigation Flags\nlibrary_books\nJSON/REST API\nlibrary_books\nApp-Entwicklung\nlibrary_books\nSicheres Programmieren mit PHP\nlibrary_books\nTests\nlibrary_books\nSmarty\nlibrary_books\nTinyMCE\nlibrary_books\nModule\nlibrary_books\nAnhang\nlibrary_books\nBarrierefreiheit\nZuletzt geänderte Seiten\nDesign anpassen 09.01.2025\nAls Standard Suche einsetzen 09.01.2025\nErweiterte Einstellungen 24.12.2024\nTechnischer Ablauf 24.12.2024\nDocker 19.12.2024\nReiter Inhalt 18.12.2024\nRaumverwaltung 17.12.2024\nUrlaubsantrag 17.12.2024\nStartseite 17.12.2024\nChatbot 17.12.2024\nKI 17.12.2024\n{get_page} 03.12.2024\nSystemvoraussetzungen 13.11.2024\nLinux / Ubuntu 24.04 LTS 05.11.2024\nToolbar und Kontextmenü anpassen 28.10.2024\nWYSIWYG 28.10.2024\nBetriebsysteme 22.10.2024\nOracleDB 22.10.2024\nMySQL / MariaDB 22.10.2024\nDatenbanken 22.10.2024\nRedaktion- und Liveserver\n\nUm eine Liveumgebung in Docker-Compose abzubilden, muss ein zusätzlicher Container live mit dem gleichen Image wie der egocms Container eingebunden werden.\n\ndocker-compose.yml nach docker-compose-live.yml kopieren und erweitern:\n\n...\negocms:\n  container_name: egocms\n  image: egotec/server-cms:18.04\n  environment:\n    - BOOTSTRAP=/usr/share/nginx/egocms/var/docker/bootstrap-live.sh\n...\nlive:\n container_name: live image: egotec/server-cms:18.04\n ports:\n   - 10080:80\n   - 10443:443\n expose:\n   - 80\n   - 443\n networks:\n   - egocms\n volumes:\n   - ./mysqllive:/var/lib/mysql\n   - ./live:/usr/share/nginx/egocms\n command: bash /start.sh\n\nmailhog:\n...\n\nDer Liverser ist dann über die Ports 80 für http und 443 für https erreichbar.\n\nDer Liveser befindet sich wie der Redaktionsserver im egocms Netzwerk. Der Redaktionsserver kann den Liveserver daher über die Domain live mit den normalen Ports 80 für http und 443 für https erreichen (http://live oder https://live).\n\nFür den Bootstrap wird nun ein modifiezrtes Skript benötigt, das auch den Liveserver initialisiert. Dieses wird über die Umgebungsvariable BOOTSTRAP im egocms Container eingebunden.\n\n  environment:\n    - BOOTSTRAP=/usr/share/nginx/egocms/var/docker/bootstrap-live.sh\n\n\nDer Bootstrap erfolgt dann über das normale bootstrap.sh Skript.\n\n1\ndocker·exec·egocms·bash·/bootstrap.sh¶\n\nOder in der IDE per Rechtsklicj auf den egocms Container. Im Exec Untermenü wählt man bash /bootstrap.sh aus.\n\nImpressum | Datenschutz"
  }
]